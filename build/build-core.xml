<?xml version="1.0" encoding="UTF-8"?>
<project default="core.artifact" basedir="." name="LuceeCore" xmlns:antcontrib="antlib:net.sf.antcontrib">
  <description>
    Build Lucee itself
  </description>
  <property name="project.dir" location="../"/>
  <property name="resource.dir" location="${project.dir}/build/resource"/>
  <xmlproperty file="${src.dir}/loader/pom.xml" prefix="luceeinfo" keeproot="false" />
  <version-splitter property="lucee.build.version" version="${luceeinfo.version}" bump=""/>
  <antcontrib:var name="version" value="${lucee.build.version.long}" />
  <macrodef name="checkJavaVersion">
    <sequential>
      <antcontrib:propertyregex override="yes" property="__major" input="${lucee.build.version.long}" 
        regexp="(\d).*" select="\1" />
      <antcontrib:propertyregex override="yes" property="__minor" input="${lucee.build.version.long}" 
        regexp="\d\.(\d).*" select="\1" />
      <antcontrib:if>
        <equals arg1="${__major}" arg2="4" />
        <then>
          <property name="lucee.javac.compiler" value="1.7" />
        </then>
        <else>
          <antcontrib:if>
            <and>
              <equals arg1="${__major}" arg2="5" />
            </and>
            <then>
              <property name="lucee.javac.compiler" value="1.8" />
            </then>
          </antcontrib:if>
        </else>
      </antcontrib:if>
      <!-- check for java version and fail build if not the correct version --> 
      <echo message="Java Version: ${java.version}"/> 
      <echo message="Java home: ${java.home}"/> 
      <fail message="Unsupported Java version: ${java.version}. Make sure that the JRE version is ${lucee.javac.compiler} by setting java.home to the correct JRE. (java.home=${java.home})"> 
          <condition> 
              <not>
                <or>
                <contains string="${java.version}" substring="${lucee.javac.compiler}" casesensitive="false" />
<!--
                <contains string="${java.version}" substring="1.7" casesensitive="false" />
-->
                <contains string="${java.version}" substring="1.8" casesensitive="false" />
              </or>
              </not> 
          </condition> 
      </fail> 
    </sequential>
  </macrodef>
	
  <target name="instrumentation.compile" description="copy non java files" >
    <property name="srcInst" location="${src.dir}/instrumentation/src/main/java"/> 
    <!-- set class path for the compiler -->
    <mvn-get-deps scope="runtime" todir="${temp.dir}/libs" pomfile="${src.dir}/loader/pom.xml" />
    <path id="classpath">
      <fileset dir="${temp.dir}/libs">
        <include name="**/*.jar" />
      </fileset>
    </path>
    <!-- compile inst source to temp directory -->
    <javac-ecj srcdir="${srcInst}" destdir="${temp.dir}/inst" 
      compliance="${lucee.javac.compiler}" classpath="${toString:classpath}"
      encoding="ISO-8859-1" fork="true" maxmemory="512m" />
    <!-- build the inst jar -->
    <jar 
      jarfile="${dist.dir}/lucee-inst.jar" basedir="${temp.dir}/inst"  manifest="${srcInst}/META-INF/MANIFEST.MF">
      <manifest>
        <attribute name="Built-Date" value="${NOW}"/>
      </manifest>
    </jar>
  </target>
  
  <target name="loader.compile" description="copy none java files" depends="exists.src.xml">
    <antcontrib:var name="luceeinfo" unset="true" />
    <xmlproperty file="${src.dir}/loader/pom.xml" prefix="luceeinfo" keeproot="false" />
    <version-splitter property="lucee.build.version" version="${luceeinfo.version}" bump=""/>
    <maven-run basedir="${src.dir}/loader"
       options="-Dbuild.type=${build.type} -Dtestcases=false"
       goal="clean verify"
       resultproperty="maven.build.result"/>
     <echo message="${maven.build.result}" />
  </target>

	<target name="core.artifact" depends="loader.compile,instrumentation.compile" description="create core artifact">
    <pom-and-deploy pomid="lucee" artifact="${src.dir}/loader/target/lucee-${luceeinfo.version}.jar" packaging="jar" buildtype="${mvn.type}"
    groupId="org.lucee" artifactId="lucee" version="${lucee.build.version.long}" name="lucee" />

	  <!-- artifacts for config templates -->
    <zip destfile="${temp.dir}/lucee-config.zip" update="true">
      <fileset dir="${src.dir}/core/src/main/java/resource/config/" includes="server.xml, web.xml" />
    </zip>
    <pom-and-deploy pomid="luceeconfig.pom" artifact="${temp.dir}/lucee-config.zip" packaging="zip" buildtype="${mvn.type}"
     groupId="org.lucee" artifactId="lucee.config" version="${version}" name="lucee.config" />
    <delete file="${temp.dir}/lucee-config.zip" />

    <!-- artifact for bundle wars (installer, express, etc., has welcome pages vs. empty war) -->
    <zip destfile="${temp.dir}/lucee-bundlewar.zip" update="true">
      <fileset dir="${basedir}/resource/war" />
      <fileset dir="${basedir}/resource/website" />
    </zip>
    <pom-and-deploy pomid="luceebundlewar.pom" artifact="${temp.dir}/lucee-bundlewar.zip" packaging="zip" buildtype="${mvn.type}"
     groupId="org.lucee" artifactId="lucee.bundlewar" version="${version}" name="lucee.bundlewar" />
    <delete file="${temp.dir}/lucee-bundlewar.zip" />

    <!-- artifact for empty war (nothing besides WEB-INF) -->
    <zip destfile="${temp.dir}/lucee-wartemplate.zip" update="true">
      <fileset dir="${basedir}/resource/war" />
    </zip>
    <pom-and-deploy pomid="luceewartemplate.pom" artifact="${temp.dir}/lucee-wartemplate.zip" packaging="zip" buildtype="${mvn.type}"
     groupId="org.lucee" artifactId="lucee.wartemplate" version="${version}" name="lucee.wartemplate" />
    <delete file="${temp.dir}/lucee-wartemplate.zip" />

    <pom-and-deploy pomid="luceelibs.inst.pom" artifact="${dist.dir}/lucee-inst.jar" packaging="jar" buildtype="${mvn.type}"
     groupId="org.lucee.lib" artifactId="lucee-inst" version="${version}" name="lucee-inst" />
  </target>	
  
  <target name="libs.zip" depends="core.artifact" description="builds the lexs package">
    <delete dir="${temp.dir}/libs" />
    <mvn-get-deps scope="runtime" todir="${temp.dir}/libs" pomfile="${src.dir}/loader/pom.xml" />
    <zip destfile="${dist.dir}/bundles/lucee-${version}-libs.zip">
        <zipfileset dir="${temp.dir}/libs"/>    
    </zip>
    <zip destfile="${dist.dir}/bundles/lucee-${version}-lexs.zip">
        <zipfileset dir="${src.dir}/loader/target/classes/extensions/" includes="*.lex"/>    
    </zip>
  </target>

  <target name="basic" depends="core.artifact" description="builds the core and the loader" >
  </target>

</project>